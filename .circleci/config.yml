version: 2.1

defaults:
  environment: &environment
    DOCKER_REGISTRY: docker.io
    DOCKER_USER: kelvintaywlcircleci
    DOCKER_LOGIN: kelvintaywlcircleci
    # DOCKER_PASSWORD will be injected as a secret

commands:
  docker-registry-login:
    description: log in to the Docker image registry
    steps:
      - run:
          name: Login to registry
          command: |
            # login credentials should be provided via context or project environment variables.
            echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY --username $DOCKER_LOGIN --password-stdin
  setup-buildx:
    description: set up context and builder instances for Docker buildx
    steps:
      - run:
          name: Check Docker settings (for buildx)
          command: |
            docker version
            docker buildx version
            docker context inspect
      - run:
          name: Setup docker buildx
          command: |
            docker context create circleci
            docker buildx create --use circleci

            docker buildx ls
            docker context inspect circleci

executors:
  docker:
    docker:
      - image: cimg/base:stable
    resource_class: medium
  machine:
    machine:
      # See https://circleci.com/developer/images?imageType=machine
      image: ubuntu-2204:2022.07.1
    resource_class: medium

jobs:
  build-push:
    environment:
      <<: *environment
    parameters:
      postgres-version:
        description: Postgres version to build for
        type: string
      image-name:
        description: image name for Docker image to be pushed
        type: string
        # See https://hub.docker.com/repository/docker/kelvintaywlcircleci/hello-buildx
        default: "postgres-pg_bigm"
    executor: machine
    steps:
      - checkout
      - docker-registry-login
      - run:
          name: Build << parameters.image-name>>:<< parameters.postgres-version >>
          command: |
            docker image build \
              --tag "${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name>>:<< parameters.postgres-version >>" \
              --build-arg "POSTGRES_VERSION=<< parameters.postgres-version >>" \
              .
      - run:
          name: Push << parameters.image-name>>:<< parameters.postgres-version >>
          command: |
            docker image push "${DOCKER_REGISTRY}/${DOCKER_USER}/<< parameters.image-name>>:<< parameters.postgres-version >>"

workflows:
  main:
    jobs:
      - build-push:
          matrix:
            parameters:
              postgres-version:
                - "14"
                - "9.6"
